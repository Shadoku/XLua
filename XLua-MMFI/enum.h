#ifndef ENUM_H_
#define ENUM_H_

#include "xlua.h"

// Constants

enum {
	LV_INT,
	LV_DBL,
	LV_STR
};

struct EnumValue {
	char*	name;
	char	type;
	union {
		int		iVal;
		float	dVal;
		char*	sVal;
	};
};

const EnumValue mmfiEnum[] = {
	{ "ANY_CLASS",			LV_INT,	-1 },
	{ "DIFF_CLASS",			LV_INT,	-3 },
	{ "SAME_CLASS",			LV_INT,	-2 },

	{ "ANY_LAYER",			LV_INT,	-1 },
	{ "DIFF_LAYER",			LV_INT, -3 },
	{ "SAME_LAYER",			LV_INT, -2 },

	{ "ALT_A",				LV_INT, 1 },
	{ "ALT_B",				LV_INT, 2 },
	{ "ALT_C",				LV_INT, 3 },
	{ "ALT_D",				LV_INT, 4 },
	{ "ALT_E",				LV_INT, 5 },
	{ "ALT_F",				LV_INT, 6 },
	{ "ALT_G",				LV_INT, 7 },
	{ "ALT_H",				LV_INT, 8 },
	{ "ALT_I",				LV_INT, 9 },
	{ "ALT_J",				LV_INT, 10 },
	{ "ALT_K",				LV_INT, 11 },
	{ "ALT_L",				LV_INT, 12 },
	{ "ALT_M",				LV_INT, 13 },
	{ "ALT_N",				LV_INT, 14 },
	{ "ALT_O",				LV_INT, 15 },
	{ "ALT_P",				LV_INT, 16 },
	{ "ALT_Q",				LV_INT, 17 },
	{ "ALT_R",				LV_INT, 18 },
	{ "ALT_S",				LV_INT, 19 },
	{ "ALT_T",				LV_INT, 20 },
	{ "ALT_U",				LV_INT, 21 },
	{ "ALT_V",				LV_INT, 22 },
	{ "ALT_W",				LV_INT, 23 },
	{ "ALT_X",				LV_INT, 24 },
	{ "ALT_Y",				LV_INT, 25 },
	{ "ALT_Z",				LV_INT, 26 },

	{ "DIR_ALL",			LV_INT,	DIRF_ALL },
	{ "DIR_E",				LV_INT,	DIRID_E },
	{ "DIR_N",				LV_INT,	DIRID_N },
	{ "DIR_NE",				LV_INT,	DIRID_NE },
	{ "DIR_NEE",			LV_INT,	DIRID_NEE },
	{ "DIR_NNE",			LV_INT,	DIRID_NNE },
	{ "DIR_NNW",			LV_INT,	DIRID_NNW },
	{ "DIR_NW",				LV_INT,	DIRID_NW },
	{ "DIR_NWW",			LV_INT,	DIRID_NWW },
	{ "DIR_S",				LV_INT,	DIRID_S },
	{ "DIR_SE",				LV_INT,	DIRID_SE },
	{ "DIR_SEE",			LV_INT,	DIRID_SEE },
	{ "DIR_SSE",			LV_INT,	DIRID_SSE },
	{ "DIR_SSW",			LV_INT,	DIRID_SSW },
	{ "DIR_SW",				LV_INT,	DIRID_SW },
	{ "DIR_SWW",			LV_INT,	DIRID_SWW },
	{ "DIR_W",				LV_INT,	DIRID_W },

	{ "INK_ADD",			LV_INT, BOP_ADD },
	{ "INK_AND",			LV_INT,	BOP_AND },
	{ "INK_INVERTED",		LV_INT,	BOP_INVERT },
	{ "INK_MONOCHROME",		LV_INT,	BOP_MONO },
	{ "INK_NONE",			LV_INT,	BOP_COPY },
	{ "INK_OR",				LV_INT,	BOP_OR },
	{ "INK_SEMI",			LV_INT,	BOP_BLEND },
	{ "INK_SUBTRACT",		LV_INT,	BOP_SUB },
	{ "INK_XOR",			LV_INT,	BOP_XOR },

	{ "MOUSE_LEFT",			LV_INT,	1 },
	{ "MOUSE_MIDDLE",		LV_INT, 2 },
	{ "MOUSE_RIGHT",		LV_INT, 3 },
	{ "MOUSE_X1",			LV_INT, 4 },
	{ "MOUSE_X2",			LV_INT, 5 },

	{ "VK_BACK",			LV_INT, 0x08 },
	{ "VK_TAB",				LV_INT, 0x09 },
	{ "VK_RETURN",			LV_INT, 0x0D },
	{ "VK_SHIFT",			LV_INT, 0x10 },
	{ "VK_CONTROL",			LV_INT, 0x11 },
	{ "VK_ALT",				LV_INT, 0x12 },
	{ "VK_MENU",			LV_INT, 0x12 },
	{ "VK_PAUSE",			LV_INT, 0x13 },
	{ "VK_CAPITAL",			LV_INT, 0x14 },
	{ "VK_ESCAPE",			LV_INT, 0x1B },
	{ "VK_SPACE",			LV_INT, 0x20 },
	{ "VK_PRIOR",			LV_INT, 0x21 },
	{ "VK_PAGEUP",			LV_INT, 0x21 },
	{ "VK_NEXT",			LV_INT, 0x22 },
	{ "VK_PAGEDOWN",		LV_INT, 0x22 },
	{ "VK_END",				LV_INT, 0x23 },
	{ "VK_HOME",			LV_INT, 0x24 },
	{ "VK_LEFT",			LV_INT, 0x25 },
	{ "VK_UP",				LV_INT, 0x26 },
	{ "VK_RIGHT",			LV_INT, 0x27 },
	{ "VK_DOWN",			LV_INT, 0x28 },
	{ "VK_SNAPSHOT",		LV_INT, 0x2C },
	{ "VK_PRINTSCREEN",		LV_INT, 0x2C },
	{ "VK_INSERT",			LV_INT, 0x2D },
	{ "VK_DELETE",			LV_INT, 0x2E },
	{ "VK_0",				LV_INT, 0x30 },
	{ "VK_1",				LV_INT, 0x31 },
	{ "VK_2",				LV_INT, 0x32 },
	{ "VK_3",				LV_INT, 0x33 },
	{ "VK_4",				LV_INT, 0x34 },
	{ "VK_5",				LV_INT, 0x35 },
	{ "VK_6",				LV_INT, 0x36 },
	{ "VK_7",				LV_INT, 0x37 },
	{ "VK_8",				LV_INT, 0x38 },
	{ "VK_9",				LV_INT, 0x39 },
	{ "VK_A",				LV_INT, 0x41 },
	{ "VK_B",				LV_INT, 0x42 },
	{ "VK_C",				LV_INT, 0x43 },
	{ "VK_D",				LV_INT, 0x44 },
	{ "VK_E",				LV_INT, 0x45 },
	{ "VK_F",				LV_INT, 0x46 },
	{ "VK_G",				LV_INT, 0x47 },
	{ "VK_H",				LV_INT, 0x48 },
	{ "VK_I",				LV_INT, 0x49 },
	{ "VK_J",				LV_INT, 0x4A },
	{ "VK_K",				LV_INT, 0x4B },
	{ "VK_L",				LV_INT, 0x4C },
	{ "VK_M",				LV_INT, 0x4D },
	{ "VK_N",				LV_INT, 0x4E },
	{ "VK_O",				LV_INT, 0x4F },
	{ "VK_P",				LV_INT, 0x50 },
	{ "VK_Q",				LV_INT, 0x51 },
	{ "VK_R",				LV_INT, 0x52 },
	{ "VK_S",				LV_INT, 0x53 },
	{ "VK_T",				LV_INT, 0x54 },
	{ "VK_U",				LV_INT, 0x55 },
	{ "VK_V",				LV_INT, 0x56 },
	{ "VK_W",				LV_INT, 0x57 },
	{ "VK_X",				LV_INT, 0x58 },
	{ "VK_Y",				LV_INT, 0x59 },
	{ "VK_Z",				LV_INT, 0x5A },
	{ "VK_LWIN",			LV_INT, 0x5B },
	{ "VK_RWIN",			LV_INT, 0x5C },
	{ "VK_NUMPAD0",			LV_INT, 0x60 },
	{ "VK_NUMPAD1",			LV_INT, 0x61 },
	{ "VK_NUMPAD2",			LV_INT, 0x62 },
	{ "VK_NUMPAD3",			LV_INT, 0x63 },
	{ "VK_NUMPAD4",			LV_INT, 0x64 },
	{ "VK_NUMPAD5",			LV_INT, 0x65 },
	{ "VK_NUMPAD6",			LV_INT, 0x66 },
	{ "VK_NUMPAD7",			LV_INT, 0x67 },
	{ "VK_NUMPAD8",			LV_INT, 0x68 },
	{ "VK_NUMPAD9",			LV_INT, 0x69 },
	{ "VK_MULTIPLY",		LV_INT, 0x6A },
	{ "VK_ADD",				LV_INT, 0x6B },
	{ "VK_SUBTRACT",		LV_INT, 0x6D },
	{ "VK_DECIMAL",			LV_INT, 0x6E },
	{ "VK_DIVIDE",			LV_INT, 0x6F },
	{ "VK_F1",				LV_INT, 0x70 },
	{ "VK_F2",				LV_INT, 0x71 },
	{ "VK_F3",				LV_INT, 0x72 },
	{ "VK_F4",				LV_INT, 0x73 },
	{ "VK_F5",				LV_INT, 0x74 },
	{ "VK_F6",				LV_INT, 0x75 },
	{ "VK_F7",				LV_INT, 0x76 },
	{ "VK_F8",				LV_INT, 0x77 },
	{ "VK_F9",				LV_INT, 0x78 },
	{ "VK_F10",				LV_INT, 0x79 },
	{ "VK_F11",				LV_INT, 0x7A },
	{ "VK_F12",				LV_INT, 0x7B },
	{ "VK_NUMLOCK",			LV_INT, 0x90 },
	{ "VK_SCROLL",			LV_INT, 0x91 },
	{ "VK_LSHIFT",			LV_INT, 0xA0 },
	{ "VK_RSHIFT",			LV_INT, 0xA1 },
	{ "VK_LCONTROL",		LV_INT, 0xA2 },
	{ "VK_RCONTROL",		LV_INT, 0xA3 },
	{ "VK_LMENU",			LV_INT, 0xA4 },
	{ "VK_LALT",			LV_INT, 0xA4 },
	{ "VK_RMENU",			LV_INT, 0xA5 },
	{ "VK_RALT",			LV_INT, 0xA5 },

	{ 0, 0, 0 },
};

#endif